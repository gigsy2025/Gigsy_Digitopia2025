import ConvexClientProvider from "@/providers/ConvexClientProvider";
import "@/styles/globals.css";
import { env } from "@/env";
import { ClerkProvider } from "@clerk/nextjs";
import { MarketingHeader } from "./_components/marketing-header";
import { type Metadata } from "next";
import { ThemeProvider } from "next-themes";
import { Geist } from "next/font/google";
import { Providers } from "@/components/jotai-provider";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  // Get the publishable key with fallback for build environments
  const publishableKey =
    env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY ??
    process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY ??
    "pk_test_placeholder";

  return (
    <ClerkProvider publishableKey={publishableKey}>
      <ConvexClientProvider>
        <html
          lang="en"
          className={`${geist.variable}`}
          suppressHydrationWarning
        >
          <body
            className="bg-slate-950 text-slate-100 antialiased"
            suppressHydrationWarning
          >
            <Providers>
              <ThemeProvider
                attribute="class"
                defaultTheme="system"
                enableSystem
                disableTransitionOnChange
              >
                <div className="flex min-h-screen flex-col">
                  <MarketingHeader />
                  <main className="flex-1">{children}</main>
                  <footer className="border-t border-slate-800/60 bg-slate-950/80 py-10 text-sm text-slate-500">
                    <div className="mx-auto flex max-w-6xl flex-col gap-4 px-6 lg:px-8">
                      <p className="font-semibold text-slate-300">Gigsy</p>
                      <p className="max-w-2xl text-slate-400">
                        End-to-end orchestration for hybrid talent ecosystems.
                        Built for enterprises that run on momentum, compliance,
                        and measurable outcomes.
                      </p>
                      <div className="flex flex-wrap items-center gap-6 text-xs text-slate-500">
                        <span>
                          Â© {new Date().getFullYear()} Gigsy. All rights
                          reserved.
                        </span>
                        <a
                          href="/legal/privacy"
                          className="transition hover:text-slate-300"
                        >
                          Privacy
                        </a>
                        <a
                          href="/legal/terms"
                          className="transition hover:text-slate-300"
                        >
                          Terms
                        </a>
                        <a
                          href="/contact"
                          className="transition hover:text-slate-300"
                        >
                          Contact
                        </a>
                      </div>
                    </div>
                  </footer>
                </div>
              </ThemeProvider>
            </Providers>
          </body>
        </html>
      </ConvexClientProvider>
    </ClerkProvider>
  );
}
