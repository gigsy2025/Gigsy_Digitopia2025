import ConvexClientProvider from "@/providers/ConvexClientProvider";
import "@/styles/globals.css";
import { env } from "@/env";
import {
  ClerkProvider,
  SignedIn,
  SignedOut,
  SignInButton,
  SignUpButton,
  UserButton,
} from "@clerk/nextjs";

import { type Metadata } from "next";
import { ThemeProvider } from "next-themes";
import { Geist } from "next/font/google";
import { Providers } from "@/components/jotai-provider";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  // Get the publishable key with fallback for build environments
  const publishableKey =
    env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY ??
    process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY ??
    "pk_test_placeholder";

  return (
    <ClerkProvider publishableKey={publishableKey}>
      <ConvexClientProvider>
        <html
          lang="en"
          className={`${geist.variable}`}
          suppressHydrationWarning
        >
          <body suppressHydrationWarning>
            <Providers>
              <ThemeProvider
                attribute="class"
                defaultTheme="system"
                enableSystem
                disableTransitionOnChange
              >
                <header className="flex h-16 items-center justify-end gap-4 p-4">
                  <SignedOut>
                    <SignInButton />
                    <SignUpButton>
                      <button className="text-ceramic-white h-10 cursor-pointer rounded-full bg-[#6c47ff] px-4 text-sm font-medium sm:h-12 sm:px-5 sm:text-base">
                        Sign Up
                      </button>
                    </SignUpButton>
                  </SignedOut>
                  <SignedIn>
                    <UserButton />
                  </SignedIn>
                </header>
                {children}
              </ThemeProvider>
            </Providers>
          </body>
        </html>
      </ConvexClientProvider>
    </ClerkProvider>
  );
}
