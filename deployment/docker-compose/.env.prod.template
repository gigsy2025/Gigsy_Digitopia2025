# ðŸš€ Production Environment Variables Template
# Copy this file to .env.prod and configure for your production environment

# ========================================
# APPLICATION CONFIGURATION
# ========================================

# Image Tag (Set by CI/CD Pipeline)
GIGSY_IMAGE_TAG=sha-abc123def456  # This will be overridden by deployment scripts

# Application Environment
NODE_ENV=production
PORT=3000

# Application URLs
NEXTAUTH_URL=https://gigsy.com
NEXTAUTH_SECRET=your-super-secure-nextauth-secret-here-64-chars-minimum

# Security Configuration
SESSION_SECRET=your-super-secure-session-secret-here-64-chars-minimum
ENCRYPTION_KEY=your-super-secure-encryption-key-here-32-chars-exactly

# ========================================
# DATABASE CONFIGURATION
# ========================================

# PostgreSQL Configuration
POSTGRES_DB=gigsy_prod
POSTGRES_USER=gigsy_user
POSTGRES_PASSWORD=your-super-secure-database-password-here

# Database Connection
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
DATABASE_POOL_SIZE=20

# ========================================
# CACHE CONFIGURATION
# ========================================

# Redis Configuration
REDIS_PASSWORD=your-super-secure-redis-password-here
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379

# ========================================
# EXTERNAL SERVICES
# ========================================

# Monitoring & Error Tracking
SENTRY_DSN=https://your-sentry-dsn-here@sentry.io/project-id

# Email Service (Optional)
SMTP_HOST=smtp.your-provider.com
SMTP_PORT=587
SMTP_USER=your-smtp-username
SMTP_PASS=your-smtp-password
SMTP_FROM=noreply@gigsy.com

# File Storage (Optional)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=gigsy-production-uploads

# ========================================
# PERFORMANCE & SCALING
# ========================================

# Memory Configuration
MAX_MEMORY=512m

# Logging Configuration
LOG_LEVEL=info

# Feature Flags
ENABLE_DEBUG=false
MAINTENANCE_MODE=false

# ========================================
# SSL/TLS CONFIGURATION
# ========================================

# SSL Certificate Paths (if using custom certificates)
SSL_CERT_PATH=/etc/nginx/ssl/gigsy.com.crt
SSL_KEY_PATH=/etc/nginx/ssl/gigsy.com.key

# ========================================
# BACKUP CONFIGURATION
# ========================================

# Backup Settings
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=gigsy-production-backups
BACKUP_ENCRYPTION_KEY=your-backup-encryption-key-here

# ========================================
# MONITORING CONFIGURATION
# ========================================

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# Metrics Configuration
METRICS_ENABLED=true
METRICS_PORT=9090

# ========================================
# SECURITY CONFIGURATION
# ========================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# CORS Configuration
CORS_ORIGIN=https://gigsy.com,https://www.gigsy.com
CORS_CREDENTIALS=true

# ========================================
# DEPLOYMENT CONFIGURATION
# ========================================

# Deployment Settings
DEPLOYMENT_ENVIRONMENT=production
DEPLOYMENT_STRATEGY=rolling
DEPLOYMENT_TIMEOUT=300

# Blue/Green Deployment (if using)
ENABLE_BLUE_GREEN=false
BLUE_GREEN_HEALTH_CHECK_URL=http://localhost:3000/api/health

# ========================================
# NOTIFICATION CONFIGURATION
# ========================================

# Slack Notifications (Optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook
SLACK_CHANNEL=#deployments

# PagerDuty (Optional)
PAGERDUTY_API_KEY=your-pagerduty-api-key
PAGERDUTY_SERVICE_ID=your-pagerduty-service-id
